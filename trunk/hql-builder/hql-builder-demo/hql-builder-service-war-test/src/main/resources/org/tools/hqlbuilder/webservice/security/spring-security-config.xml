<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security.xsd"
	>

	<!-- http://www.codeproject.com/Articles/253901/Getting-Started-Spring-Security -->
	<!-- http://javaworkbench.blogspot.com/p/spring-security.html -->

	<security:global-method-security pre-post-annotations="enabled"/>

	<alias name="filterChainProxy" alias="spring-security-filter"/>

	<bean id="filterChainProxy" class="org.springframework.security.web.FilterChainProxy">
		<security:filter-chain-map path-type="ant">
			<security:filter-chain pattern="/logged_out.htm*" filters="none"/>
			<security:filter-chain pattern="/index.htm*" filters="none"/>
			<security:filter-chain pattern="/login.jsp*" filters="none"/>
			<security:filter-chain pattern="/**" filters="securityContextFilter, logoutFilter, formLoginFilter, requestCacheFilter, servletApiFilter, anonAuthenticationFilter, sessionManagementFilter, exceptionTranslator, filterSecurityInterceptor"/>
		</security:filter-chain-map>
	</bean>

	<bean id="securityContextFilter" class="org.tools.hqlbuilder.webservice.security.CustomSecurityContextPersistenceFilter">
		<constructor-arg ref="securityContextRepository"/>
	</bean>

	<bean id="securityContextRepository" class="org.tools.hqlbuilder.webservice.security.CustomSecurityContextRepository">
	</bean>

	<bean id="logoutFilter" class="org.tools.hqlbuilder.webservice.security.CustomLogoutFilter">
		<constructor-arg value="/logged_out.htm"/>
		<constructor-arg>
			<list>
				<bean class="org.tools.hqlbuilder.webservice.security.CustomSecurityContextLogoutHandler"/>
			</list>
		</constructor-arg>
	</bean>

	<bean id="formLoginFilter" class="org.tools.hqlbuilder.webservice.security.CustomAuthenticationFilter">
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="filterProcessesUrl" value="/j_spring_security_check"/>
		<property name="authenticationSuccessHandler">
			<bean class="org.tools.hqlbuilder.webservice.security.CustomAuthenticationSuccessHandler">
				<property name="defaultTargetUrl" value="/success.jsp"/>
				<property name="alwaysUseDefaultTargetUrl" value="true"/>
			</bean>
		</property>
		<property name="authenticationFailureHandler">
			<bean class="org.tools.hqlbuilder.webservice.security.CustomAuthenticationFailureHandler">
				<property name="defaultFailureUrl" value="/login.jsp"/>
			</bean>
		</property>
	</bean>

	<bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref local="authenticationProvider"/>
				<ref local="anonAuthenticationProvider"/>
			</list>
		</property>
	</bean>

	<bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService"/>
	</bean>

	<bean id="userDetailsService" class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
		<property name="userMap">
			<value>hqladmin=justatestpassword01,enabled,ROLE_ADMIN</value>
		</property>
	</bean>

	<!-- <bean id="userDetailsService" class="org.springframework.security.core.userdetails.jdbc.JdbcDaoImpl">
		<property name="enableGroups" value="true"/>
	</bean> -->

	<bean id="anonAuthenticationProvider" class="org.tools.hqlbuilder.webservice.security.CustomAnonymousAuthenticationProvider">
		<constructor-arg value="hqlbuilder"/>
	</bean>

	<bean id="requestCacheFilter" class="org.tools.hqlbuilder.webservice.security.CustomRequestCacheAwareFilter">
		<constructor-arg ref="requestCache"/>
	</bean>

	<bean id="servletApiFilter" class="org.tools.hqlbuilder.webservice.security.CustomSecurityContextHolderAwareRequestFilter"/>

	<bean id="anonAuthenticationFilter" class="org.tools.hqlbuilder.webservice.security.CustomAnonymousAuthenticationFilter">
		<constructor-arg value="hqlbuilder"/>
		<property name="userAttribute" value="anonymousUser,ROLE_ANONYMOUS"/>
	</bean>

	<bean id="sessionManagementFilter" class="org.tools.hqlbuilder.webservice.security.CustomSessionManagementFilter">
		<constructor-arg ref="securityContextRepository"/>
	</bean>

	<bean id="exceptionTranslator" class="org.tools.hqlbuilder.webservice.security.CustomExceptionTranslationFilter">
		<constructor-arg>
			<bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
				<property name="loginFormUrl" value="/login.jsp"/>
			</bean>
		</constructor-arg>
		<constructor-arg ref="requestCache"/>
	</bean>

	<bean id="requestCache" class="org.tools.hqlbuilder.webservice.security.CustomRequestCache">
	</bean>

	<bean id="filterSecurityInterceptor" class="org.tools.hqlbuilder.webservice.security.CustomFilterSecurityInterceptor">
		<property name="securityMetadataSource">
			<security:filter-security-metadata-source>
				<security:intercept-url pattern="/login.jsp*" access="ROLE_ANONYMOUS"/>
				<security:intercept-url pattern="/logged_out.htm*" access="ROLE_ANONYMOUS"/>
				<security:intercept-url pattern="/success.jsp*" access="ROLE_USER,ROLE_ADMIN"/>
				<security:intercept-url pattern="/wicket/**" access="ROLE_USER,ROLE_ADMIN"/>
				<security:intercept-url pattern="/rest/**" access="ROLE_USER,ROLE_ADMIN"/>
				<security:intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
			</security:filter-security-metadata-source>
		</property>
		<property name="authenticationManager" ref="authenticationManager"/>
		<property name="accessDecisionManager" ref="accessDecisionManager"/>
	</bean>

	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter"/>
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter"/>
			</list>
		</property>
	</bean>

</beans>